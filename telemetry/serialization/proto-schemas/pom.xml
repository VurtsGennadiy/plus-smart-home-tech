<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>ru.yandex.practicum</groupId>
        <artifactId>serialization</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>proto-schemas</artifactId>

    <dependencies>
        <!--Предоставляет клиентские и серверные заглушки (stubs),
         которые позволяют вызывать gRPC-сервисы и реализовывать их.-->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
        </dependency>

        <!--API for gRPC over Protocol Buffers, including tools for serializing and de-serializing protobuf messages.-->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
        </dependency>

        <!-- Until gRPC generator library moves to generated jakarta instead of javax -->
        <!-- https://github.com/grpc/grpc-java/issues/9179 -->
        <!--Совместимость аннотаций javax (которые генерирует protoc) и jakarta (использует Spring)-->
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>1.3.5</version>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <!--генерация классов на основе схем proto-->
            <!--https://github.com/ascopes/protobuf-maven-plugin-->
            <plugin>
                <groupId>io.github.ascopes</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>

                <configuration>
                    <!--Здесь задаётся версия компилятора protoc — официального компилятора Protocol Buffers от Google.
                    Плагин автоматически скачает и использует эту версию для генерации кода.-->
                    <protocVersion>${protobuf.version}</protocVersion>

                    <!--отдельный плагин, который protoc вызывает после генерации базовых классов. Для того чтобы
                    дополнительно сгенерировать код для rpc сервисов. Плагин будет автоматически скачан из maven-central-->
                    <binaryMavenPlugins>
                        <binaryMavenPlugin>
                            <groupId>io.grpc</groupId>
                            <artifactId>protoc-gen-grpc-java</artifactId>
                            <version>${grpc.version}</version>
                        </binaryMavenPlugin>
                    </binaryMavenPlugins>
                </configuration>

                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--добавить в сборку дополнительные каталоги со сгенерированным исходным кодом-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/protobuf</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>