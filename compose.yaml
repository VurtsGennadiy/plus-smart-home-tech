services:
  kafka:
    image: confluentinc/confluent-local:7.4.3
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092" # for client connections
      - "9101:9101" # JMX
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      CLUSTER_ID: 'K0EA9p0yEe6MkAAAAkKsEg'

  kafka-init-topics:
    image: confluentinc/confluent-local:7.4.3
    container_name: kafka-init-topics
    depends_on:
      - kafka
    command: "bash -c \
                'kafka-topics --create --topic telemetry.sensors.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092 && \
                kafka-topics --create --topic telemetry.snapshots.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092 && \
                kafka-topics --create --topic telemetry.hubs.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092'"
    init: true

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8088:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'

  db:
    image: postgres:16.1
    container_name: postgres
    ports:
      - "6543:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=smart_home
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  # ------ Сервисы инфраструктуры ------

  discovery-server:
    container_name: discovery-server
    build: ./infra/discovery-server
    ports:
      - "8761:8761"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 12s

  config-server:
    container_name: config-server
    build: ./infra/config-server
    environment:
      - SERVER_PORT=8762
      - EUREKA_SERVER_URL=http://discovery-server:8761/eureka/
    depends_on:
      discovery-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8762/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # ------ Сервисы коммерции ------

  shopping-store:
    container_name: shopping-store
    build: ./commerce/shopping-store
    environment:
      - EUREKA_SERVER_URL=http://discovery-server:8761/eureka/
      - POSTGRES_HOST=db
    depends_on:
      config-server:
        condition: service_healthy
    restart: on-failure

  shopping-cart:
    container_name: shopping-cart
    build: ./commerce/shopping-cart
    environment:
      - EUREKA_SERVER_URL=http://discovery-server:8761/eureka/
      - POSTGRES_HOST=db
    depends_on:
      config-server:
        condition: service_healthy
    restart: on-failure

  warehouse:
    container_name: warehouse
    build: ./commerce/warehouse
    environment:
      - EUREKA_SERVER_URL=http://discovery-server:8761/eureka/
      - POSTGRES_HOST=db
    depends_on:
      config-server:
        condition: service_healthy
    restart: on-failure



